{"version":3,"sources":["App.js","index.js"],"names":["App","posts","useState","title","body","completeBlogPost","setCompleteBlogPost","dbBlogPosts","setdbBlogPosts","handleChange","event","target","name","value","prevVal","useEffect","a","axios","get","then","response","data","console","log","catch","err","getBlogPost","className","onSubmit","preventDefault","payload","url","method","type","placeholder","onChange","cols","rows","length","map","post","index","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAIe,SAASA,IAAO,IA6EHC,EA7EE,EACoBC,mBAAS,CACvDC,MAAO,GACPC,KAAM,KAHoB,mBACrBC,EADqB,KACHC,EADG,OAKUJ,mBAAS,IALnB,mBAKrBK,EALqB,KAKRC,EALQ,KAwB5B,SAASC,EAAaC,GAAQ,IAAD,EACLA,EAAMC,OAArBC,EADoB,EACpBA,KAAMC,EADc,EACdA,MAEbP,GAAoB,SAACQ,GACnB,OAAO,2BACFA,GADL,kBAEGF,EAAOC,OAyDd,OAhFAE,qBAAU,WAAM,4CACd,sBAAAC,EAAA,sEACQC,IAAMC,IAAI,QACbC,MAAK,SAACC,GACL,IAAMC,EAAOD,EAASC,KACtBb,EAAea,GACfC,QAAQC,IAAI,6BAEfC,OAAM,SAACC,GACNH,QAAQC,IAAIE,MARhB,4CADc,uBAAC,WAAD,wBAYdC,KAEC,CAACrB,IAmEF,yBAAKsB,UAAU,OACb,kDACA,0BAAMC,SAvDV,SAAsBlB,GACpBA,EAAMmB,iBACN,IAAMC,EAAU,CACd3B,MAAOE,EAAiBF,MACxBC,KAAMC,EAAiBD,MAsB3Ba,IAAM,CACJc,IAAK,YACLC,OAAQ,OACRX,KAAMS,IAELX,MAAK,WACJG,QAAQC,IAAI,oCAxBdjB,EAAoB,CAClBH,MAAO,GACPC,KAAM,QAyBPoB,OAAM,SAACC,GACNH,QAAQC,IAAI,8BAoBV,yBAAKI,UAAU,cACb,2BACAM,KAAK,OACLrB,KAAK,QACLsB,YAAY,QACZrB,MAAOR,EAAiBF,MACxBgC,SAAU1B,KAGZ,yBAAKkB,UAAU,cACb,8BACEM,KAAK,OACLrB,KAAK,OACLsB,YAAY,YACZE,KAAK,KACLC,KAAK,KACLxB,MAAOR,EAAiBD,KACxB+B,SAAU1B,KAIZ,2CAEJ,yBAAKkB,UAAU,eArCO1B,EAsCFM,GArCX+B,OACJrC,EAAMsC,KAAI,SAACC,EAAMC,GAAP,OACf,yBAAKC,IAAKD,EAAOd,UAAU,sBACzB,4BAAKa,EAAKrC,OACV,2BAAIqC,EAAKpC,UAJa,OC9E9BuC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d93ccd1b.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios'\nimport './App.css'\n\nexport default function App() {\n  const [completeBlogPost, setCompleteBlogPost] = useState({\n    title: '',\n    body: '',\n  })\n  const [dbBlogPosts, setdbBlogPosts] = useState([])\n\n  useEffect(() => {\n    async function getBlogPost() {\n      await axios.get('/api')\n        .then((response) => {\n          const data = response.data;\n          setdbBlogPosts(data);\n          console.log('Data has been received');\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n    }\n    getBlogPost();\n\n  }, [completeBlogPost])\n\n\n  function handleChange(event) {\n    const {name, value} = event.target;\n    \n    setCompleteBlogPost((prevVal) => {\n      return {\n        ...prevVal,\n        [name]: value\n      }\n    })\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const payload = {\n      title: completeBlogPost.title,\n      body: completeBlogPost.body\n    }\n  \n  function clearInputs() {\n    setCompleteBlogPost({\n      title: '',\n      body: ''\n    })\n  }\n\n  // function getBlogPost() {\n  //   axios.get('/api')\n  //     .then((response) => {\n  //       const data = response.data;\n  //       setdbBlogPosts([data]);\n  //       console.log('Data has been received');\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     })\n  // }\n\n  axios({\n    url: '/api/save',\n    method: 'POST',\n    data: payload\n  })\n    .then(()=> {\n      console.log('Data has been sent to the server')\n      clearInputs();\n    })\n    .catch((err) => {\n      console.log('Internal Server Error')\n    })\n  }\n//function to display posts that takes posts as a param and returns null if \n//posts array is empty.  If it's not empty, then loop through the posts\n\n  function displayBlogPosts(posts) {\n    if (!posts.length) return null;\n    return posts.map((post, index) => (\n      <div key={index} className=\"blog-post__display\">\n        <h3>{post.title}</h3>\n        <p>{post.body}</p>\n      </div>\n    ));\n  }\n\n  return (\n    <div className=\"app\">\n      <h2>Welcome to my Blog</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-input\">\n          <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          value={completeBlogPost.title}\n          onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-input\">\n          <textarea\n            type=\"text\"\n            name=\"body\"\n            placeholder=\"Post Body\"\n            cols=\"30\"\n            rows=\"10\"\n            value={completeBlogPost.body}\n            onChange={handleChange}\n          >\n          </textarea>\n        </div>\n          <button>Submit</button>\n      </form>\n      <div className=\"blog-posts\">\n        {displayBlogPosts(dbBlogPosts)}\n      </div>\n    </div>\n  )\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}